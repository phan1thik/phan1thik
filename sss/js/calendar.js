// üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
if (localStorage.getItem("authorized") !== "true") {
  window.location.href = "login.html";
}

const grid = document.getElementById("dayGrid");
const markedDays = JSON.parse(localStorage.getItem("markedDays") || "[]");

// üìÖ –ü–æ–ª—É—á–∞–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É
const today = new Date();
const todayDay = today.getDate();

// ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
for (let i = 1; i <= 30; i++) {
  const day = document.createElement("div");
  day.className = "day";
  day.textContent = i;

  if (markedDays.includes(i)) {
    day.classList.add("active");
  }

  day.addEventListener("click", () => {
    if (i > todayDay) {
      alert("–ù–µ–ª—å–∑—è –æ—Ç–º–µ—á–∞—Ç—å –±—É–¥—É—â–∏–µ –¥–Ω–∏!");
      return;
    }

    if (!markedDays.includes(i)) {
      markedDays.push(i);
      localStorage.setItem("markedDays", JSON.stringify(markedDays));
      day.classList.add("active");
    } else {
      alert("–≠—Ç–æ—Ç –¥–µ–Ω—å —É–∂–µ –æ—Ç–º–µ—á–µ–Ω!");
    }
  });

  grid.appendChild(day);
}

// üìù –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è
const dailyTasks = document.querySelectorAll("#dailyTasks input");
const weeklyTasks = document.querySelectorAll("#weeklyTasks input");

// üìÜ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
const lastDailyReset = localStorage.getItem("lastDailyReset");
const todayDateStr = today.toISOString().split("T")[0];

if (lastDailyReset !== todayDateStr) {
  // –ù–æ–≤—ã–π –¥–µ–Ω—å ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è
  dailyTasks.forEach((task, index) => {
    task.checked = false;
  });
  localStorage.setItem("lastDailyReset", todayDateStr);
  localStorage.removeItem("dailyTasksState");
} else {
  // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  const savedState = JSON.parse(localStorage.getItem("dailyTasksState") || "[]");
  dailyTasks.forEach((task, index) => {
    task.checked = savedState[index] || false;
  });
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
dailyTasks.forEach((task, index) => {
  task.addEventListener("change", () => {
    const state = Array.from(dailyTasks).map(t => t.checked);
    localStorage.setItem("dailyTasksState", JSON.stringify(state));
  });
});

// üóì –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è (—Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤—Ä—É—á–Ω—É—é)
const savedWeekly = JSON.parse(localStorage.getItem("weeklyTasksState") || "[]");
weeklyTasks.forEach((task, index) => {
  task.checked = savedWeekly[index] || false;

  task.addEventListener("change", () => {
    const state = Array.from(weeklyTasks).map(t => t.checked);
    localStorage.setItem("weeklyTasksState", JSON.stringify(state));
  });
})